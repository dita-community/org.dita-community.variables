<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:vocabularyModuleDesc.rng"
                         schematypens="http://relaxng.org/ns/structure/1.0"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:dita="http://dita.oasis-open.org/architecture/2005/" 
  xmlns="http://relaxng.org/ns/structure/1.0">
  <moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
    <moduleTitle>DITA Community Variables Domain</moduleTitle>
    <headerComment>
Defines elements for defining "variables" and variable references
that are metadata based.

This domain may be used in maps and topics as all of the elements defined
in it are sensible in both contexts.

Copyright (c) 2014 Eliot Kimber
      </headerComment>
    <moduleMetadata>
      <moduleType>elementdomain</moduleType>
      <moduleShortName>dc_variables-d</moduleShortName>
      <modulePublicIds>
        <dtdMod>urn:pubid:dita-community.org:doctypes:dita:modules:dc_variablesDomain</dtdMod>
        <dtdEnt>urn:pubid:dita-community.org:doctypes:dita:modules:dc_variablesDomain:entities</dtdEnt>
        <xsdMod>urn:pubid:dita-community.org:doctypes:dita:xsd:dc_variablesDomain.xsd</xsdMod>
        <rncMod>urn:pubid:dita-community.org:doctypes:dita:rnc:dc_variablesDomain.rnc</rncMod>
        <rngMod>urn:pubid:dita-community.org:doctypes:dita:rng:dc_variablesDomain.rng</rngMod>
      </modulePublicIds>
      <domainsContribution>(topic dc_variables-d)</domainsContribution>
    </moduleMetadata>
  </moduleDesc>

  <div>
    <a:documentation>DOMAIN EXTENSION PATTERNS</a:documentation>

    <define name="dc_variables-d-ph">
      <choice>
        <ref name="dc-variable-definitions.element"/>
        <ref name="dc_variables-d-text.element"/>
        <ref name="dc_variables-d-keyword.element"/>
      </choice>
    </define>

    <define name="ph" combine="choice">
      <ref name="dc_variables-d-ph"/>
    </define>
  </div>
  <div>
    <a:documentation>ELEMENT TYPE NAME PATTERNS</a:documentation>
    <define name="dc-variable-definitions">
      <ref name="dc-variable-definitions.element"/>
    </define>
    <define name="dc_variables-d-text">
      <ref name="dc_variables-d-text.element"/>
    </define>
    <define name="dc_variables-d-keyword">
      <ref name="dc_variables-d-keyword.element"/>
    </define>
  </div>
  <div>
    <a:documentation>ELEMENT TYPE DECLARATIONS</a:documentation>
    <div>
      <a:documentation>LONG NAME: Variable Definitions</a:documentation>
      <define name="dc-variable-definitions.content">
        <!-- FIXME: Need an element to hold the label -->
        <choice>
          <zeroOrMore>
            <ref name="dc-variable-definition"/>
            <ref name="dc-variable-definition-fallback"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="dc-variable-definitions"/>
          </zeroOrMore>
        </choice>
      </define>
      <define name="dc-variable-definitions.attributes">
        <ref name="univ-atts"/>
        <optional>
          <attribute name="outputclass"/>
        </optional>
      </define>
      <define name="dc-variable-definitions.element">
        <element name="dc-variable-definitions" dita:longName="Variable Definitions">
          <a:documentation>Contains definitions of variables.</a:documentation>
          <ref name="dc-variable-definitions.attlist"/>
          <ref name="dc-variable-definitions.content"/>
        </element>
      </define>
      <define name="dc-variable-definitions.attlist" combine="interleave">
        <ref name="dc-variable-definitions.attributes"/>
      </define>
    </div>    
    <div>
      <a:documentation>LONG NAME: Variable Definition

Defines a single variable.

The value of the @name attribute serves as the variable name,
by which it is referenced from variable-ref elements.

The value of the variable may be specified using either the @value
attribute or put in content. If there is both content and a @value
attribute, the content is ignored and the @value attribute is used.

Variable definitions should not be nested.
      </a:documentation>
      <define name="dc-variable-definition.content">
        <ref name="data.cnt"/>
      </define>
      <define name="dc-variable-definition.attributes">
        <ref name="data-element-atts"/>
      </define>
      <define name="dc-variable-definition.element">
        <element name="dc-variable-definitions" dita:longName="Variable Definitions">
          <a:documentation>Contains definitions of variables.</a:documentation>
          <ref name="dc-variable-definitions.attlist"/>
          <ref name="dc-variable-definitions.content"/>
        </element>
      </define>
      <define name="dc-variable-definitions.attlist" combine="interleave">
        <ref name="dc-variable-definitions.attributes"/>
      </define>
    </div>
    
        
    
    
    
    
  </div>
  <div>
    <a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS</a:documentation>
    <define name="b.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/b "/>
      </optional>
    </define>
    <define name="i.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/i "/>
      </optional>
    </define>
    <define name="line-through.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/line-through "/>
      </optional>
    </define>
    <define name="overline.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/overline "/>
      </optional>
    </define>
    <define name="sub.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/sub "/>
      </optional>
    </define>
    <define name="sup.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/sup "/>
      </optional>
    </define>
    <define name="tt.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/tt "/>
      </optional>
    </define>
    <define name="u.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/ph hi-d/u "/>
      </optional>
    </define>
  </div>
</grammar>
