<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="urn:oasis:names:tc:dita:rng:vocabularyModuleDesc.rng"
                         schematypens="http://relaxng.org/ns/structure/1.0"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:dita="http://dita.oasis-open.org/architecture/2005/" 
  xmlns="http://relaxng.org/ns/structure/1.0">
  <moduleDesc xmlns="http://dita.oasis-open.org/architecture/2005/">
    <moduleTitle>DITA Community Variables Domain</moduleTitle>
    <headerComment>
Defines elements for defining "variables" and variable references
that are metadata based.

This domain may be used in maps and topics as all of the elements defined
in it are sensible in both contexts.

Copyright (c) 2014 Eliot Kimber
      </headerComment>
    <moduleMetadata>
      <moduleType>elementdomain</moduleType>
      <moduleShortName>dc_variables-d</moduleShortName>
      <modulePublicIds>
        <dtdMod>urn:pubid:dita-community.org:doctypes:dita:modules:dc_variablesDomain</dtdMod>
        <dtdEnt>urn:pubid:dita-community.org:doctypes:dita:modules:dc_variablesDomain:entities</dtdEnt>
        <rncMod>urn:pubid:dita-community.org:doctypes:dita:rnc:dc_variablesDomainMod.rnc</rncMod>
        <rngMod>urn:pubid:dita-community.org:doctypes:dita:rng:dc_variablesDomainMod.rng</rngMod>
        <xsdMod>urn:pubid:dita-community.org:doctypes:dita:xsd:dc_variablesDomainMod.xsd</xsdMod>
      </modulePublicIds>
      <domainsContribution>(topic dc_variables-d)</domainsContribution>
    </moduleMetadata>
  </moduleDesc>

  <div>
    <a:documentation>DOMAIN EXTENSION PATTERNS</a:documentation>
    

    <define name="dc_variables-d-ph">
      <choice>
        <ref name="dc-variableref_keyword.element"/>
      </choice>
    </define>
    <define name="dc_variables-d-text">
      <choice>
        <ref name="dc-variableref.element"/>
      </choice>
    </define>
    <define name="dc_variables-d-data">
      <choice>
        <ref name="dc-variable-definitions.element"/>
        <ref name="dc-variable-definition.element"/>
        <ref name="dc-variable-definition-fallback.element"/>
      </choice>
    </define>

    <define name="ph" combine="choice">
      <ref name="dc_variables-d-ph"/>
    </define>
    <define name="text" combine="choice">
      <ref name="dc_variables-d-text"/>
    </define>
    <define name="data" combine="choice">
      <ref name="dc_variables-d-data"/>
    </define>
  </div>
  <div>
    <a:documentation>ELEMENT TYPE NAME PATTERNS</a:documentation>
    <define name="dc-variable-definitions">
      <ref name="dc-variable-definitions.element"/>
    </define>
    <define name="dc-variable-definition">
      <ref name="dc-variable-definition.element"/>
    </define>
    <define name="dc-variable-definition-fallback">
      <ref name="dc-variable-definition-fallback.element"/>
    </define>
    <define name="dc-variableref_keyword">
      <ref name="dc-variableref_keyword.element"/>
    </define>
    <define name="dc-variableref">
      <ref name="dc-variableref.element"/>
    </define>
  </div>
  <div>
    <a:documentation>ELEMENT TYPE DECLARATIONS</a:documentation>
    <div>
      <a:documentation>LONG NAME: Variable Definitions</a:documentation>
      <define name="dc-variable-definitions.content">
        <!-- FIXME: Need an element to hold the label -->
        <choice>
          <zeroOrMore>
            <choice>           
              <ref name="dc-variable-definition"/>
              <ref name="dc-variable-definition-fallback"/>
            </choice>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="dc-variable-definitions"/>
          </zeroOrMore>
        </choice>
      </define>
      <define name="dc-variable-definitions.attributes">
        <ref name="univ-atts"/>
        <optional>
          <attribute name="outputclass"/>
        </optional>
      </define>
      <define name="dc-variable-definitions.element">
        <element name="dc-variable-definitions" dita:longName="Variable Definitions">
          <a:documentation>Contains definitions of variables.</a:documentation>
          <ref name="dc-variable-definitions.attlist"/>
          <ref name="dc-variable-definitions.content"/>
        </element>
      </define>
      <define name="dc-variable-definitions.attlist" combine="interleave">
        <ref name="dc-variable-definitions.attributes"/>
      </define>
    </div>    
    <div>
      <a:documentation>LONG NAME: Variable Definition

Defines a single variable.

The value of the @name attribute serves as the variable name,
by which it is referenced from variable-ref elements.

The value of the variable may be specified using either the @value
attribute or put in content. If there is both content and a @value
attribute, the content is ignored and the @value attribute is used.

Variable definitions should not be nested.
      </a:documentation>
      <define name="dc-variable-definition.content">
        <zeroOrMore>
          <ref name="data.cnt"/>
        </zeroOrMore>
      </define>
      <define name="dc-variable-definition.attributes">
        <attribute name="name"><a:documentation>The variable name by which the variable is referenced.</a:documentation></attribute>
        <optional>
          <attribute name="value"><a:documentation>The value of the variable. Takes precedence over element content.</a:documentation></attribute>
        </optional>
        <ref name="univ-atts"/>
      </define>
      <define name="dc-variable-definition.element">
        <element name="dc-variable-definition" dita:longName="Variable Definition">
          <a:documentation>Defines a single variable.</a:documentation>
          <ref name="dc-variable-definition.attlist"/>
          <ref name="dc-variable-definition.content"/>
        </element>
      </define>
      <define name="dc-variable-definition.attlist" combine="interleave">
        <ref name="dc-variable-definition.attributes"/>
      </define>
    </div>    
    <div>
      <a:documentation>LONG NAME: Variable Definition Fallback

Defines a single variable to be used as a fallback value within
topics when no other value of the variable is declared in a higher
context. When specified in a topic prolog, it defines the fallback
value for that topic and all of its descendants. The fallback
value is used if and only if there is no other in-scope definition
of the same variable name at the point of reference, including
declarations that occur in the same scope as the fallbck definition.

The value of the @name attribute serves as the variable name,
by which it is referenced from variable-ref elements.

The value of the variable may be specified using either the @value
attribute or put in content. If there is both content and a @value
attribute, the content is ignored and the @value attribute is used.

Variable definitions should not be nested.
      </a:documentation>
      <define name="dc-variable-definition-fallback.content">
        <zeroOrMore>
          <ref name="data.cnt"/>
        </zeroOrMore>
      </define>
      <define name="dc-variable-definition-fallback.attributes">
        <attribute name="name"><a:documentation>The variable name by which the variable is referenced.</a:documentation></attribute>
        <optional>
          <attribute name="value"><a:documentation>The value of the variable. Takes precedence over element content.</a:documentation></attribute>
        </optional>
        <ref name="univ-atts"/>
      </define>
      <define name="dc-variable-definition-fallback.element">
        <element name="dc-variable-definition-fallback" dita:longName="Variable Definitions">
          <a:documentation>Fallback variable definition.</a:documentation>
          <ref name="dc-variable-definition-fallback.attlist"/>
          <ref name="dc-variable-definition-fallback.content"/>
        </element>
      </define>
      <define name="dc-variable-definition-fallback.attlist" combine="interleave">
        <ref name="dc-variable-definition-fallback.attributes"/>
      </define>
    </div>
      <div>
        <a:documentation>LONG NAME: Variable reference (text)
          
A reference to a variable as defined by a variable definition
element.

The content of the element is the name of the variable.

Note: Because &lt;text&gt; and &lt;keyword&gt; are not in all contexts, there are
two variants of this element one from &lt;keyword%gt; and one 
from &lt;text&gt;. Their semantics and behavior are identical.

For DITA 1.3, the &lt;text&gt; element is allowed pretty much anywhere, so the
keyword version should not be needed.
        </a:documentation>
        <define name="dc-variableref.content">
          <zeroOrMore>
            <choice>
              <text/>
            </choice>
          </zeroOrMore>
        </define>
        <define name="dc-variableref.attributes">
          <ref name="base-attribute-extensions"/>
          <ref name="univ-atts"/>
          <optional>
            <attribute name="outputclass"/>
          </optional>
        </define>
        <define name="dc-variableref.element">
          <element name="dc-variableref" dita:longName="Variable Reference (text)">
            <a:documentation>A reference to a variable as defined by a variable definition
element.</a:documentation>
            <ref name="dc-variableref.attlist"/>
            <ref name="dc-variableref.content"/>
          </element>
        </define>
        <define name="dc-variableref.attlist" combine="interleave">
          <ref name="dc-variableref.attributes"/>
        </define>
      </div>
    <div>
        <a:documentation>LONG NAME: Variable reference (keyword)
          
A reference to a variable as defined by a variable definition
element.

The content of the element is the name of the variable.

Note: Because &lt;text&gt; and &lt;keyword&gt; are not allowed in all contexts, there are
two variants of this element one from &lt;keyword%gt; and one 
from &lt;text&gt;. Their semantics and behavior are identical.

For DITA 1.3, the &lt;text&gt; element is allowed pretty much anywhere, so the
keyword version should not be needed.
        </a:documentation>
        <define name="dc-variableref_keyword.content">
          <zeroOrMore>
            <choice>
              <text/>
            </choice>
          </zeroOrMore>
        </define>
        <define name="dc-variableref_keyword.attributes">
          <ref name="univ-atts"/>
          <optional>
            <attribute name="outputclass"/>
          </optional>
        </define>
        <define name="dc-variableref_keyword.element">
          <element name="dc-variableref_keyword" dita:longName="Variable Reference (keyword)">
            <a:documentation>A reference to a variable as defined by a variable definition
element.</a:documentation>
            <ref name="dc-variableref_keyword.attlist"/>
            <ref name="dc-variableref_keyword.content"/>
          </element>
        </define>
        <define name="dc-variableref_keyword.attlist" combine="interleave">
          <ref name="dc-variableref_keyword.attributes"/>
        </define>
      </div>    
  </div>
  <div>
    <a:documentation>SPECIALIZATION ATTRIBUTE DECLARATIONS</a:documentation>
    <define name="dc-variable-definitions.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/data dc-variables-d/dc-variable-definitions "/>
      </optional>
    </define>
    <define name="dc-variable-definition.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/data dc-variables-d/dc-variable-definition "/>
      </optional>
    </define>
    <define name="dc-variable-definition-fallback.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/data dc-variables-d/dc-variable-definition-fallback "/>
      </optional>
    </define>
    <define name="dc-variableref.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/text dc-variables-d/dc-variableref "/>
      </optional>
    </define>
    <define name="dc-variableref_keyword.attlist" combine="interleave">
      <ref name="global-atts"/>
      <optional>
        <attribute name="class" a:defaultValue="+ topic/text dc-variables-d/dc-variableref_keyword "/>
      </optional>
    </define>
  </div>
</grammar>
